// Auto-generated API functions for api
// Do not edit this file manually

import { requestGet, requestPost } from '../index';
import type { ApiResponse, ApiRequestConfig } from '../../types';

/**
 * GetDDCConfig
 * 获取商户合约相关的默认配置参数
 * @path POST /config
 */
export async function getDDCConfig(
  data: {
    /** 钱包地址 可选
     */
    address?: string;
  },
  config?: ApiRequestConfig
): Promise<
  ApiResponse<{
    /** nft 工厂合约的地址  用于部署商户NFT 合约
     */
    nft_factory_address: string;

    /** membership 工厂合约的地址 */
    membership_factory_address: string;
    metadata_url: string;

    /** 如果用户当前钱包地址 mint 了nft, 则返回, 用于判断是否已经存在
     */
    nft_address?: Array<string>;

    /** 如果用户当前钱包地址已经有 membership 合约, 则返回, 用于判断是否已经存在
     */
    membership_address?: Array<string>;

    /** ddc 的 rpc 网络配置信息, 同 metamask 钱包上的配置

 */
    network: {
      chainId: number;
      chainName: string;
      rpc_url: string;
      token_symbol: string;
      explore_url: string;
    };
  }>
> {
  return requestPost<{
    /** nft 工厂合约的地址  用于部署商户NFT 合约
     */
    nft_factory_address: string;

    /** membership 工厂合约的地址 */
    membership_factory_address: string;
    metadata_url: string;

    /** 如果用户当前钱包地址 mint 了nft, 则返回, 用于判断是否已经存在
     */
    nft_address?: Array<string>;

    /** 如果用户当前钱包地址已经有 membership 合约, 则返回, 用于判断是否已经存在
     */
    membership_address?: Array<string>;

    /** ddc 的 rpc 网络配置信息, 同 metamask 钱包上的配置

 */
    network: {
      chainId: number;
      chainName: string;
      rpc_url: string;
      token_symbol: string;
      explore_url: string;
    };
  }>(`/config`, data, config);
}

/**
 * GetNftHash
 * 获取 存储的用户transfer nft 所用的 Recipient 的hash 参见 DDC Contract
 * @path POST /getNfttHash
 */
export async function getNftHash(
  data: {
    /** 商户钱包地址 */
    address: string;
  },
  config?: ApiRequestConfig
): Promise<
  ApiResponse<{
    code: number;
    data: {
      /** 返回 receipt
私钥的Hash */
      receiptHash: string;
    };
    message: string;
  }>
> {
  return requestPost<{
    code: number;
    data: {
      /** 返回 receipt
私钥的Hash */
      receiptHash: string;
    };
    message: string;
  }>(`/getNfttHash`, data, config);
}

/**
 * SetNftAddress
 * @path POST /setNftAddress
 */
export async function setNftAddress(
  data: {
    address: string;
  },
  config?: ApiRequestConfig
): Promise<ApiResponse<unknown>> {
  return requestPost<unknown>(`/setNftAddress`, data, config);
}

/**
 * SetMembershipAddress
 * @path POST /setMembershipAddress
 */
export async function setMembershipAddress(
  data: {
    address: string;
  },
  config?: ApiRequestConfig
): Promise<ApiResponse<unknown>> {
  return requestPost<unknown>(`/setMembershipAddress`, data, config);
}
